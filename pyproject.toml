[tool.poetry]
name = "zimtool"
version = "0.1.0"
description = "Generate ZIM files using openzim tools"
authors = ["Blondel MONDESIR <deldesir@gmail.com>"]
license = "GPL-3.0-or-later"
readme = "README.md"
repository = "https://github.com/deldesir/zimtool"
documentation = "deldesir.github.io/zimtool"
keywords = ["zim", "offline"]
classifiers = [
    "Development Status :: 2- Pre-Alpha",
    "Intended Audience :: Developers",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
    "Private :: Do not upload",
]

[tool.poetry.dependencies]
google-api-python-client = {version = "*", optional = true}
google-auth-oauthlib = {version = "*", optional = true}
google-auth-httplib2 = {version = "*", optional = true}
jinja2 = {version = "^2.11, <3.0", optional = true}
kiwixstorage = {version = "^0.8.1", optional = true}
MarkupSafe = {version = "^2.8.0", optional = true}
oauth2client = {version = "*", optional = true}
python = "^3.8, <3.12"
python-dateutil = {"version = "^2.8.0", optional = true}
python-slugify = {version = "^3.0.3", optional = true}
requests = {version = "^2.26.0, <3.0", optional = true}
pif = {version = "^0.8.2", optional = true}
youtube2zim = {version = "*", optional = true}
yt-dlp = {version = "*", optional = true}
zimscraperlib = "^1.8.0, <1.9"


[tool.poetry.extras]
youtube = [
    "mysqlclient", 
    "google-api-python-client",
    "google-auth-oauthlib",
    "jinja2"
    "kiwixstorage",
    "MarkupSafe",
    "python-dateutil",
    "python-slugify",
    "requests",
    "pif",
    "youtube2zim",
    "yt-dlp",
    "zimscraperlib",
]
nautilus = ["jinja2"]
custom_videos = [
    "mysqlclient", 
    "kiwixstorage",
    "MarkupSafe",
    "python-dateutil",
    "python-slugify",
    "requests",
    "pif",
    "youtube2zim",
    "zimscraperlib",
]


[tool.poetry.group.nox.dependencies]
nox-poetry = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.poetry.group.type_check.dependencies]
mypy = "*"

[tool.poetry.group.lint.dependencies]
flake8 = "*"
flake8-bugbear = "*"
flake8-broken-line = "*"
flake8-comprehensions = "*"
pep8-naming = "*"
pyproject-flake8 = "*"

[tool.poetry.group.fmt.dependencies]
black = "*"
isort = "*"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "*"
mkdocs-htmlproofer-plugin = "*"
mkdocstrings = { version = "*", extras = ["python"] }
## Autodoc.
mkdocs-gen-files = "*"
mkdocs-literate-nav = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
show_error_codes = true
ignore_missing_imports = true
strict = true

[tool.flake8]
max-line-length = 99
extend-ignore = ["E203"]

[tool.black]
line-length = 99
target-version = ["py38", "py39", "py310", "py311"]

[tool.isort]
profile = "black"
line_length = 99
force_sort_within_sections = true
src_paths = ["src/zimtool"]
skip_gitignore = true
# If you need to skip/exclude folders, consider using skip_glob as that will allow the
# isort defaults for skip to remain without the need to duplicate them.

[tool.pytest.ini_options]
filterwarnings = [
    # When running tests, treat warnings as errors (e.g. -Werror).
    # See: https://docs.pytest.org/en/latest/reference/reference.html#confval-filterwarnings
    "error",
    # Add additional warning supressions as needed here. For example, if a third-party library
    # is throwing a deprecation warning that needs to be fixed upstream:
    # "ignore::DeprecationWarning:typer",
]

[tool.coverage.run]
branch = true
